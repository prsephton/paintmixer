#!/bin/bash
DIR=`dirname $(realpath $0)`
VERSION=`cat $DIR/../version`
echo using version $VERSION
ODIR=`pwd`
cd $DIR/..
mkdir -p runtime && cd runtime
uid=`id -u`
grp=`id -g`

function copy_eggs() {	
	eggs_dir=$( awk '/eggs-directory/ {print($3)}' ~/.buildout/default.cfg )
	if [ "$eggs_dir" ]; then
		ln -sf $eggs_dir eggs
	else
		mkdir -p eggs
	fi
	id=$(docker create prsephton/grokserver:$VERSION)
	docker cp $id:/opt/gserver/eggs e
	docker rm $id
	mv -n e/* eggs
	rm -rf e
}

if [ "$1" == "debug" ]; then
	copy_eggs
	docker run --rm --name gserver \
		-p 8080:8080 \
	  	-v ./var:/opt/gserver/var \
		-v ./parts:/opt/gserver/parts \
		-v ./src:/opt/gserver/src \
		-v ./setup.py:/opt/gserver/setup.py \
		-v ./buildout.cfg:/opt/gserver/buildout.cfg \
		-v ./extends-cache:/opt/gserver/extends-cache \
		-v $DIR/../grokwiki:/opt/gserver/grokwiki \
		--mount type=bind,src=$(realpath eggs),dst=/opt/gserver/eggs \
		prsephton/grokserver:$VERSION debug
else
	docker run --rm --network host --name gserver \
		-p 8080:8080 \
	  	-v ./var:/opt/gserver/var \
		-v ./parts:/opt/gserver/parts \
		-v ./src:/opt/gserver/src \
		-v ./setup.py:/opt/gserver/setup.py \
		-v ./buildout.cfg:/opt/gserver/buildout.cfg \
		prsephton/grokserver:$VERSION deploy
fi
cd $ODIR
exit 0
